package arugoTest;
public class test{
	public static void main() {
		
		String ShiftDivider[] = {"10-17","17-23","18-23"};//テストケース　必要シフト割り振り
		int ShiftDividerCount = ShiftDivider.length;
		int ShiftDividerCounter = 0;
		
		String StaffShift[][] = {//テストケース　提出シフト
				//1   2   3   4   5   6   7   8   9   10  11  12  13  14  15
			{"0","17-23","-1","17-23","17-23","-1","17-23","-1","-1","-1","17-23","-1","17-23","17-23","17-23","17-23"},//A
			{"1","-1","17-23","17-23","-1","-1","-1","-1","17-23","-1","17-23","17-23","-1","-1","17-23","17-23"},//B
			{"2","17-23","17-23","17-23","17-23","-1","17-23","17-23","-1","-1","-1","17-23","-1","-1","-1","-1"},//C
			{"3","-1","-1","-1","17-23","17-23","-1","-1","17-23","17-23","-1","17-23","17-23","17-23","-1","17-23"},//D
			{"4","-1","17-23","-1","-1","-1","17-23","17-23","17-23","-1","-1","-1","-1","-1","-1","-1"},//E
			{"5","-1","17-23","17-23","17-23","17-23","-1","-1","17-23","-1","17-23","-1","17-23","-1","17-23","17-23"},//F
			{"6","17-23","-1","-1","-1","17-23","17-23","17-23","17-23","-1","17-23","17-23","17-23","17-23","17-23","-1"},//G
			{"7","-1","17-23","-1","-1","17-23","-1","-1","-1","-1","-1","-1","-1","-1","-1","-1"},//H
			{"8","-1","17-23","17-23","17-23","17-23","17-23","17-23","17-23","17-23","17-23","17-23","17-23","17-23","17-23","17-23"},//I
			{"9","-1","17-23","-1","-1","-1","-1","-1","17-23","17-23","-1","17-23","17-23","17-23","-1","17-23"},//J
			{"10","-1","-1","17-23","-1","17-23","17-23","17-23","-1","17-23","17-23","17-23","17-23","-1","17-23","17-23"},//K
			{"11","-1","17-23","-1","17-23","-1","17-23","17-23","-1","17-23","-1","-1","17-23","17-23","17-23","-1"},//L
			{"12","10-17","10-17","10-17","10-17","10-17","10-17","10-17","10-17","10-17","10-17","10-17","10-17","10-17","10-17","10-17"},};//M 
		
		String ResultShift[][] = {//テストケース　必要シフト
				{"1","10-17","10-17","17-23","17-23","17-23","18-23"},
				{"2","10-17","17-23","18-23","18-23"},
				{"3","10-17","17-23","18-23","18-23"},
				{"4","10-17","17-23","18-23","18-23"},
				{"5","10-17","17-23","18-23","18-23"},
				{"6","10-17","17-23","18-23","18-23"},
				{"7","10-17","10-17","17-23","17-23","17-23","18-23"},
				{"8","10-17","17-23","18-23","18-23"},
				{"9","10-17","17-23","18-23","18-23"},
				{"10","10-17","17-23","18-23","18-23"},
				{"11","10-17","17-23","18-23","18-23"},
				{"12","10-17","17-23","18-23","18-23"},
				{"13","10-17","10-17","17-23","17-23","17-23","18-23"},
				{"14","10-17","17-23","18-23","18-23"},
				{"15","10-17","17-23","18-23","18-23"},
		};
		//for(int h = 0; ShiftDividerCount > h; h++) {
		for(int i = 0; StaffShift.length > i; i++) {//10-17のシフトを作成する場合
			for(int j = 1; StaffShift[i].length > j; j++) {
				if(StaffShift[i][j].indexOf("-") == 0) {//シフトの値が-1だった場合スキップ（提出されてない場合）
					continue;
				}
				int num1 = StaffShift[i][j].indexOf("-");//出勤、退勤抜き出しに使用
				int in1 = Integer.parseInt(StaffShift[i][j].substring(0,num1));//提出シフトの出勤時間抜き出し
				int out1 = Integer.parseInt(StaffShift[i][j].substring(num1 + 1));//提出シフトの退勤時間抜き出し
				
				int in2 = Integer.parseInt(ShiftDivider[0/*テストとして10-17のシフトのみ作成する。本来はhを代入*/].substring(0,num1));//募集シフトの出勤時間抜き出し
				int out2 = Integer.parseInt(ShiftDivider[0/*テストとして10-17のシフトのみ作成する。本来はhを代入*/].substring(num1 + 1));//募集シフトの退勤時間抜き出し
				
				if(in2 >= in1 && out2 >= out1) {//出勤時間と退勤時間が当てはまるか検査
					StaffShift[i][j] = "Y";
				}
			}
		}
	}
}